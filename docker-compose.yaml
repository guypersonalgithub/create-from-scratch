services:
  angular:
    image: angular:latest
    environment:
      - NODE_ENV=development
    build:
      dockerfile: ./docker/Dockerfile.angular
      context: ./
      target: dev
    profiles:
      - angular
    init: true
    volumes:
      - type: bind
        source: ./apps/angular/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules
      - type: bind
        source: ./packages/micro-frontends
        target: /usr/src/app/packages/micro-frontends
    networks:
      - frontend
    ports:
      - '3005:3005'
  express-backend:
    image: express-backend:latest
    environment:
      - NODE_ENV=development
      - CHOKIDAR_INTERVAL=1000
    build:
      dockerfile: ./docker/Dockerfile.express-backend
      context: ./
      target: dev
    profiles:
      - express-backend
    init: true
    volumes:
      - type: bind
        source: ./apps/express-backend/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules
      - type: bind
        source: ./packages/shared-types
        target: /usr/src/app/packages/shared-types
      - type: bind
        source: ./packages/test
        target: /usr/src/app/packages/test
      - type: bind
        source: ./packages/test-dependency
        target: /usr/src/app/packages/test-dependency
    networks:
      - backend
    ports:
      - '3002:3002'
  next:
    image: next:latest
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - WATCHPACK_INTERVAL=1000
    build:
      dockerfile: ./docker/Dockerfile.next
      context: ./
      target: dev
    profiles:
      - next
    init: true
    volumes:
      - type: bind
        source: ./apps/next/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules
      - type: bind
        source: ./packages/test
        target: /usr/src/app/packages/test
      - type: bind
        source: ./packages/test-dependency
        target: /usr/src/app/packages/test-dependency
    networks:
      - frontend
    ports:
      - '3003:3003'
  remix:
    image: remix:latest
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
    build:
      dockerfile: ./docker/Dockerfile.remix
      context: ./
      target: dev
    profiles:
      - remix
    init: true
    volumes:
      - type: bind
        source: ./apps/remix/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules
      - type: bind
        source: ./packages/test
        target: /usr/src/app/packages/test
      - type: bind
        source: ./packages/test-dependency
        target: /usr/src/app/packages/test-dependency
    networks:
      - frontend
    ports:
      - '3000:3000'
      - '3001:3001'
  vite-client:
    image: vite-client:latest
    environment:
      - NODE_ENV=development
    build:
      dockerfile: ./docker/Dockerfile.vite-client
      context: ./
      target: dev
    profiles:
      - vite-client
    init: true
    volumes:
      - type: bind
        source: ./apps/vite-client/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules
      - type: bind
        source: ./packages/test
        target: /usr/src/app/packages/test
      - type: bind
        source: ./packages/test-dependency
        target: /usr/src/app/packages/test-dependency
      - type: bind
        source: ./packages/shared-types
        target: /usr/src/app/packages/shared-types
      - type: bind
        source: ./packages/micro-frontends
        target: /usr/src/app/packages/micro-frontends
      - type: bind
        source: ./packages/get-fps
        target: /usr/src/app/packages/get-fps
      - type: bind
        source: ./apps/vite-client/vite.config.ts
        target: /usr/src/app/vite.config.ts
    networks:
      - frontend
    ports:
      - '5173:5173'
  vite-micro:
    image: vite-micro:latest
    environment:
      - NODE_ENV=development
    build:
      dockerfile: ./docker/Dockerfile.vite-micro
      context: ./
      target: dev
    profiles:
      - vite-micro
    init: true
    volumes:
      - type: bind
        source: ./apps/vite-micro/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules
      - type: bind
        source: ./packages/micro-frontends
        target: /usr/src/app/packages/micro-frontends
      - type: bind
        source: ./apps/vite-client/vite.config.ts
        target: /usr/src/app/vite.config.ts
    networks:
      - frontend
    ports:
      - '5174:5174'
  vue:
    image: vue:latest
    environment:
      - NODE_ENV=development
    build:
      dockerfile: ./docker/Dockerfile.vue
      context: ./
      target: dev
    profiles:
      - vue
    init: true
    volumes:
      - type: bind
        source: ./apps/vue/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules
      - type: bind
        source: ./packages/micro-frontends
        target: /usr/src/app/packages/micro-frontends
      - type: bind
        source: ./apps/vue/vite.config.ts
        target: /usr/src/app/vite.config.ts
    networks:
      - frontend
    ports:
      - '3004:3004'
networks:
  frontend:
    name: frontend
  backend:
    name: backend
