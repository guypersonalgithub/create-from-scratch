export const TokenTypes = {
  DEFINITION: "definition",
  VARIABLE: "variable",
  CONST_VARIABLE: "const-variable",
  FUNCTION_NAME: "function-name",
  STRING: "string",
  TYPE: "type",
  WHITESPACE: "whitespace",
  EQUAL: "equal",
  END_OF_LINE: "end-of-line",
  TYPE_COLON: "type-colon",
  TYPE_OR: "type-or",
  TYPE_AND: "type-and",
  IMPORT: "import",
  IMPORT_VARIABLE: "import-variable",
  IMPORT_CURLY_BRACKET: "import-curly-bracket",
  ARRAY_SQUARE_BRACKET: "array-square-bracket",
  OBJECT_CURLY_BRACKET: "object-curly-bracket",
  OBJECT_PROPERTY: "object-property",
  OBJECT_COLON: "object-colon",
  PARENTHESIS: "parenthesis",
  ANGLE: "angle",
  AS: "as",
  FROM: "from",
  COMMA: "comma",
  UNKNOWN: "unknown",
  OPERATOR: "operator",
  COMMENT: "comment",
  ARROW: "arrow",
  NUMBER: "number",
  EXTENDS: "extends",
  JSX: "jsx",
  JSX_PROPERTY: "jsx-property",
  TAG_CONTENT: "tag-content",
  FUNCTION_CURLY_BRACKET: "function-curly-bracket",
  RETURN: "return",
  BOOLEAN: "boolean",
  FUNCTION: "function",
  JSX_PROPERTY_EXPRESSION_INTERPOLATION: "jsx-property-expression-interpolation",
  UNDEFINED: "undefined",
  NULL: "null",
} as const;

export type TokenTypeOptions = (typeof TokenTypes)[keyof typeof TokenTypes];

export const definitionKeywords = new Set<string>(["var", "let", "const"]);
export const stringDefinitions = new Set<string>(["'", '"']);
export const operators = new Set<string>([".", ":", ",", ";", "+", "-", "*", "/", "^", "=", "!"]);
export const breakpoints = new Set<string>([
  " ",
  "{",
  "}",
  "(",
  ")",
  "`",
  "&",
  "|",
  "\n",
  "<",
  ">",
  "[",
  "]",
  ...operators,
  ...stringDefinitions,
]);

export const acceptableCharactersAfterANumber = new Set<string>([
  "+",
  "-",
  "*",
  "/",
  "%",
  "^",
  "&",
  "|",
  ">",
  "<",
  "=",
  " ",
  ";",
]);

export const htmlTags = new Set([
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "svg",
  "table",
  "tbody",
  "td",
  "template",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
]);

export const keywords = new Set<string>([
  "if",
  "else",
  "switch",
  "case",
  "default",
  "for",
  "while",
  "do",
  "break",
  "continue",
  "return",
  "throw",
  "try",
  "catch",
  "finally",
  "class",
  "interface",
  "enum",
  "extends",
  "implements",
  "type",
  "namespace",
  "module",
  "declare",
  "abstract",
  "function",
  "constructor",
  "new",
  "delete",
  "import",
  "export",
  "from",
  "as",
  "static",
  "public",
  "private",
  "protected",
  "readonly",
  "override",
]);

export const types = new Set<string>([
  "any",
  "void",
  "never",
  "unknown",
  "boolean",
  "number",
  "string",
  "object",
  "symbol",
  "bigint",
  "null",
  "undefined",
  "keyof",
  "typeof",
  "infer",
  "is",
  "asserts",
  "async",
  "await",
  "implements",
  "package",
]);
