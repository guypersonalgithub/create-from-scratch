import { type CompilerOptionFallbackPolling } from "./compilerOptionFallbackPolling";
import { type CompilerOptionJSX } from "./compilerOptionJSX";
import { type CompilerOptionLib } from "./compilerOptionLib";
import { type CompilerOptionModule } from "./compilerOptionModule";
import { type CompilerOptionModuleResolution } from "./CompilerOptionModuleResolution";
import { type CompilerOptionTarget } from "./compilerOptionTarget";

export type TSConfig = {
  files?: string[];
  include?: string[];
  exclude?: string[];
  extends?: string;
  references?: { path: string }[];
  compilerOptions: {
    target?: CompilerOptionTarget;
    module?: CompilerOptionModule;
    lib?: CompilerOptionLib[];
    allowJs?: boolean;
    checkJs?: boolean;
    declaration?: boolean;
    sourceMap?: boolean;
    outDir?: string;
    rootDir?: string;
    removeComments?: boolean;
    noEmit?: boolean;
    incremental?: boolean;
    tsBuildInfoFile?: string;
    strict?: boolean;
    noImplicitAny?: boolean;
    strictNullChecks?: boolean;
    esModuleInterop?: boolean;
    forceConsistentCasingInFileNames?: boolean;
    baseUrl?: string;
    paths?: Record<string, string[]>;
    typeRoots?: string[];
    types?: string[];
    allowSyntheticDefaultImports?: boolean;
    allowArbitraryExtensions?: boolean;
    allowImportingTsExtensions?: boolean;
    allowUmdGlobalAccess?: boolean;
    allowUnreachableCode?: boolean;
    allowUnusedLabels?: boolean;
    alwaysStrict?: boolean;
    assumeChangesOnlyAffectDirectDependencies?: boolean;
    charset?: string;
    composite?: boolean;
    customConditions?: string[];
    declarationDir?: string;
    declarationMap?: boolean;
    diagnostics?: boolean;
    disableReferencedProjectLoad?: boolean;
    disableSizeLimit?: boolean;
    disableSolutionSearching?: boolean;
    disableSourceOfProjectReferenceRedirect?: boolean;
    downlevelIteration?: boolean;
    emitBOM?: boolean;
    emitDeclarationOnly?: boolean;
    emitDecoratorMetadata?: boolean;
    erasableSyntaxOnly?: boolean;
    exactOptionalPropertyTypes?: boolean;
    experimentalDecorators?: boolean;
    extendedDiagnostics?: boolean;
    fallbackPolling?: CompilerOptionFallbackPolling;
    generateCpuProfile?: "profile.cpuprofile";
    importHelpers?: boolean;
    moduleResolution?: CompilerOptionModuleResolution;
    skipLibCheck?: boolean;
    jsx?: CompilerOptionJSX;
    // TODO: Consider adding other tsconfig properties in the future if desired.
  };
};
